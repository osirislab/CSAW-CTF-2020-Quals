"""
gen_check.py

    Automatically generates a bunch of conditional C code that checks to
    see if an input is the same as a target. The indexing will be arbitrary
    in order to make it more difficult to reverse engineer manually.
"""

import random

# we want our input to be this to return the flag
TARGET = "71651660587965760966"

def main():

    # generate a dict from the target where the index is the key
    mapping = { pos: val for pos, val in enumerate(list(TARGET)) }

    # shuffle the order of the keys and reinitialize mapping
    vals = list(mapping.items())
    random.shuffle(vals)
    mapping = dict(vals)

    # given the order we have now, generate C source that checks for the input
    # with our wrangled mapping
    c_source = ""
    for ind, val in mapping.items():
        c_source += "   if (our_cc[{}] != cc[{}]) exit(EXIT_FAILURE);\n".format(ind, ind)
        c_source += "   if ((our_cc[{}] + '0') != {}) exit(EXIT_FAILURE);\n".format(ind, val)

    print(c_source)

if __name__ == "__main__":
    exit(main())
